name: Code Style
on: [push, pull_request]

jobs:
  clang-format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install clang-format-9
        run: |
          sudo apt update
          sudo apt --assume-yes install clang-format-9

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt --assume-yes install libusb-1.0-0-dev
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ./src/bindings/python/src/compatibility/openvino/requirements.txt
          # Add for -DENABLE_PYTHON=ON, no cython
          python3 -m pip install -r ./src/bindings/python/src/compatibility/openvino/requirements-dev.txt

      # Run cmake with -DENABLE_PROFILING_ITT=ON -DSELECTIVE_BUILD=COLLECT in order to enable codestyle check for ITT collector
      - name: CMake
        run: |
          mkdir build
          cd build
          cmake -DENABLE_PYTHON=ON -DENABLE_TESTS=ON -DENABLE_PROFILING_ITT=ON -DSELECTIVE_BUILD=COLLECT ..

      - name: Check code style
        run: cmake --build . --target clang_format_check_all -j8
        working-directory: build

      - name: Create code style diff
        if: failure()
        run: |
          cmake --build . --target clang_format_fix_all -j8
          git diff > code_style_diff.diff
        working-directory: build

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: code_style_diff
          path: build/code_style_diff.diff

  ShellCheck:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install ShellCheck
        run: |
          sudo apt update
          sudo apt --assume-yes install shellcheck

      - name: Install dependencies
        run: python3 -m pip install -r ./src/bindings/python/src/compatibility/openvino/requirements.txt

      - name: CMake
        run: |
          mkdir build
          cd build
          cmake -DENABLE_INTEL_VPU=OFF ..

      - name: ShellCheck
        run: cmake --build . --target ie_shellcheck -j8
        working-directory: build

  NamingConventionCheck:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Clang dependency
        run: |
          sudo apt update
          sudo apt --assume-yes install libclang-12-dev

      - name: Install Python-based dependencies
        run: python3 -m pip install -r cmake/developer_package/ncc_naming_style/requirements_dev.txt

      - name: CMake
        run: |
          mkdir build
          cd build
          cmake -DENABLE_INTEL_VPU=OFF ..

      - name: Naming convention check
        run: cmake --build . --target ncc_all -j8
        working-directory: build
